# Source: https://github.com/Uniswap/v3-core/blob/4024732be626f4b4299a4314150d5c5471d59ed9/contracts/libraries/SwapMath.sol
# All dependencies taken from the same version (4024732be626f4b4299a4314150d5c5471d59ed9)
# Change library -> contract in SwapMath.sol
# Make computeSwapStep function public (internal->public) in SwapMath.sol
# Compileed with: Solidity v0.7.6+commit.7338295f 'evm version: default' 'optimization enabled, 200 steps' (Remix IDE)
# Inputs generated by test cases defined in https://github.com/Uniswap/v3-core/blob/4024732be626f4b4299a4314150d5c5471d59ed9/test/SwapMath.spec.ts

swap_math:
  pre:
    '0xbe7c43a580000000000000000000000000000001':
      code: '0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063100d3f7414610030575b600080fd5b610081600480360360a081101561004657600080fd5b5080356001600160a01b039081169160208101359091169060408101356001600160801b0316906060810135906080013562ffffff166100b1565b604080516001600160a01b0390951685526020850193909352838301919091526060830152519081900360800190f35b60008080806001600160a01b03808916908a1610158187128015906101365760006100ea8989620f42400362ffffff16620f42406102a3565b905082610103576100fe8c8c8c6001610353565b610110565b6101108b8d8c60016103ce565b9550858110610121578a9650610130565b61012d8c8b8386610479565b96505b50610180565b8161014d576101488b8b8b60006103ce565b61015a565b61015a8a8c8b6000610353565b935083886000031061016e57899550610180565b61017d8b8a8a600003856104c5565b95505b6001600160a01b038a81169087161482156101e35780801561019f5750815b6101b5576101b0878d8c60016103ce565b6101b7565b855b95508080156101c4575081155b6101da576101d5878d8c6000610353565b6101dc565b845b945061022d565b8080156101ed5750815b610203576101fe8c888c6001610353565b610205565b855b9550808015610212575081155b610228576102238c888c60006103ce565b61022a565b845b94505b8115801561023d57508860000385115b15610249578860000394505b81801561026857508a6001600160a01b0316876001600160a01b031614155b15610277578589039350610294565b610291868962ffffff168a620f42400362ffffff16610511565b93505b50505095509550955095915050565b60008080600019858709868602925082811090839003039050806102d957600084116102ce57600080fd5b50829004905061034c565b8084116102e557600080fd5b6000848688096000868103871696879004966002600389028118808a02820302808a02820302808a02820302808a02820302808a02820302808a02909103029181900381900460010186841190950394909402919094039290920491909117919091029150505b9392505050565b6000836001600160a01b0316856001600160a01b03161115610373579293925b816103a05761039b836001600160801b03168686036001600160a01b0316600160601b6102a3565b6103c3565b6103c3836001600160801b03168686036001600160a01b0316600160601b610511565b90505b949350505050565b6000836001600160a01b0316856001600160a01b031611156103ee579293925b600160601b600160e01b03606084901b166001600160a01b03868603811690871661041857600080fd5b8361044857866001600160a01b031661043b8383896001600160a01b03166102a3565b8161044257fe5b0461046e565b61046e61045f8383896001600160a01b0316610511565b886001600160a01b031661054b565b979650505050505050565b600080856001600160a01b03161161049057600080fd5b6000846001600160801b0316116104a657600080fd5b816104b85761039b8585856001610556565b6103c38585856001610637565b600080856001600160a01b0316116104dc57600080fd5b6000846001600160801b0316116104f257600080fd5b816105045761039b8585856000610637565b6103c38585856000610556565b600061051e8484846102a3565b90506000828061052a57fe5b848609111561034c57600019811061054157600080fd5b6001019392505050565b808204910615150190565b600081156105c95760006001600160a01b0384111561058c5761058784600160601b876001600160801b03166102a3565b6105a4565b6001600160801b038516606085901b816105a257fe5b045b90506105c16105bc6001600160a01b0388168361071a565b610730565b9150506103c6565b60006001600160a01b038411156105f7576105f284600160601b876001600160801b0316610511565b61060e565b61060e606085901b6001600160801b03871661054b565b905080866001600160a01b03161161062557600080fd5b6001600160a01b0386160390506103c6565b6000826106455750836103c6565b600160601b600160e01b03606085901b1682156106d3576001600160a01b0386168481029085828161067357fe5b0414156106a4578181018281106106a25761069883896001600160a01b031683610511565b93505050506103c6565b505b6106ca826106c5878a6001600160a01b031686816106be57fe5b049061071a565b61054b565b925050506103c6565b6001600160a01b038616848102908582816106ea57fe5b041480156106f757508082115b61070057600080fd5b8082036106986105bc846001600160a01b038b1684610511565b8082018281101561072a57600080fd5b92915050565b806001600160a01b038116811461074657600080fd5b91905056fea2646970667358221220bb65d86c3677a48866008eb6782a6fadbf9ba12b33a2e9f96d1e4f488809c1a364736f6c63430007060033'
  transaction:
    to: '0xbe7c43a580000000000000000000000000000001'
    data:
    # exact amount in that is fully spent in one for zero
    # https://github.com/Uniswap/v3-core/blob/4024732be626f4b4299a4314150d5c5471d59ed9/test/SwapMath.spec.ts#L85
    - :label spent 0x100d3f7400000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003298b075b4b6a5240945790610000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000000de0b6b3a76400000000000000000000000000000000000000000000000000000000000000000258
    # exact amount out that is fully received in one for zero
    # https://github.com/Uniswap/v3-core/blob/4024732be626f4b4299a4314150d5c5471d59ed9/test/SwapMath.spec.ts#L117
    - :label received 0x100d3f740000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000001bc16d674ec80000fffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c00000000000000000000000000000000000000000000000000000000000000000258
    # handles intermediate insufficient liquidity in zero for one exact output case
    # https://github.com/Uniswap/v3-core/blob/4024732be626f4b4299a4314150d5c5471d59ed9/test/SwapMath.spec.ts#L191
    - :label insufficient_liquidity 0x100d3f74000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001199999999999999999999999990000000000000000000000000000000000000000000000000000000000000400fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0000000000000000000000000000000000000000000000000000000000000bb8

